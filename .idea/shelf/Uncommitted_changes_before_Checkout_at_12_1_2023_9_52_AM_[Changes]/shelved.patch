Index: app/src/main/java/com/example/snaplearn/view/UpdateCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.snaplearn.view;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.snaplearn.R;\r\nimport com.example.snaplearn.databinding.ActivityLoginBinding;\r\nimport com.example.snaplearn.databinding.ActivityUpdateCardBinding;\r\nimport com.example.snaplearn.model.FlashCard;\r\nimport com.example.snaplearn.model.Set;\r\nimport com.example.snaplearn.viewmodel.CardAdapter;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class UpdateCard extends AppCompatActivity {\r\n\r\n    private ActivityUpdateCardBinding binding;\r\n    private String uid;\r\n    private String setID;\r\n    private DatabaseReference setsReference;\r\n    private FirebaseDatabase database;\r\n    private DatabaseReference listCardRef;\r\n    private DatabaseReference setsReference2;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityUpdateCardBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        Intent intent = getIntent();\r\n        if(intent != null) {\r\n            uid = intent.getStringExtra(\"UID\");\r\n            setID = intent.getStringExtra(\"setID\");\r\n\r\n        }\r\n        database = FirebaseDatabase.getInstance();\r\n        setsReference = database.getReference(\"users\").child(uid).child(\"sets\").child(setID);\r\n\r\n        setsReference.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    // Retrieve data for the specific setID\r\n                    Set setModel = dataSnapshot.getValue(Set.class);\r\n                    binding.editTextNameSet.setText(setModel.getName());\r\n                    binding.editTextDescription.setText(setModel.getDescription());\r\n                    // Now you can use setModel to access the data\r\n                } else {\r\n                    // Handle if the setID doesn't exist\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                // Handle potential errors\r\n            }\r\n        });\r\n        loadRV();\r\n        binding.btnAddCard.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String term = binding.editTextTerm.getText().toString();\r\n                String definition = binding.editTextDefinition.getText().toString();\r\n                addCard(term, definition);\r\n            }\r\n        });\r\n        binding.btnConfirm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String nameSet = binding.editTextNameSet.getText().toString();\r\n                String description = binding.editTextDescription.getText().toString();\r\n                updateSet(nameSet, description);\r\n                onBackPressed();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void loadRV(){\r\n        listCardRef = database.getReference(\"users\").child(uid).child(\"sets\").child(setID).child(\"listCard\");\r\n        listCardRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                List<com.example.snaplearn.model.FlashCard> cardList = new ArrayList<>();\r\n                for (DataSnapshot cardSnapshot : dataSnapshot.getChildren()) {\r\n                    com.example.snaplearn.model.FlashCard card = cardSnapshot.getValue(FlashCard.class);\r\n                    cardList.add(card);\r\n                }\r\n\r\n                LinearLayoutManager layoutManager = new LinearLayoutManager(UpdateCard.this);\r\n                binding.rvCards.setLayoutManager(layoutManager);\r\n                // Hiển thị dữ liệu trong RecyclerView bằng cách sử dụng Adapter\r\n                CardAdapter adapter = new CardAdapter(cardList);\r\n                binding.rvCards.setAdapter(adapter);\r\n            }\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                // Xử lý lỗi nếu cần\r\n            }\r\n        });\r\n    }\r\n    public void addCard(String term, String definition) {\r\n        String cardId = database.getReference(\"users\").child(uid).child(\"sets\").child(setID).child(\"listCard\").push().getKey(); // Tạo cardID mới\r\n        FlashCard flashCard = new FlashCard(cardId, setID, term, definition);\r\n\r\n        // Lấy tham chiếu đến danh sách thẻ\r\n        DatabaseReference listCardRef = database.getReference(\"users\").child(uid).child(\"sets\").child(setID).child(\"listCard\");\r\n\r\n        // Thêm thẻ mới vào danh sách\r\n        listCardRef.child(cardId).setValue(flashCard).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if (task.isSuccessful()) {\r\n                    Toast.makeText(UpdateCard.this, \"Add card successfully\", Toast.LENGTH_SHORT).show();\r\n                    binding.editTextTerm.setText(\"\");\r\n                    binding.editTextDefinition.setText(\"\");\r\n\r\n                } else {\r\n                    Log.d(\"DEBUG\", \"Add card failed\");\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    private void updateSet(String nameSet, String description) {\r\n        // Tạo một HashMap chứa các giá trị muốn cập nhật\r\n        Map<String, Object> updateData = new HashMap<>();\r\n        updateData.put(\"name\", nameSet); // Giá trị mới cho trường \"name\"\r\n        updateData.put(\"description\", description); // Giá trị mới cho trường \"description\"\r\n        // Thực hiện cập nhật bằng phương thức updateChildren()\r\n        setsReference.updateChildren(updateData)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        // Cập nhật thành công\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        // Xử lý khi cập nhật thất bại\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/snaplearn/view/UpdateCard.java b/app/src/main/java/com/example/snaplearn/view/UpdateCard.java
--- a/app/src/main/java/com/example/snaplearn/view/UpdateCard.java	(revision 9ebcbef72cbb9a99f03b68c08807f03348cac50a)
+++ b/app/src/main/java/com/example/snaplearn/view/UpdateCard.java	(date 1701399054857)
@@ -3,6 +3,7 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.app.Activity;
 import android.content.Intent;
@@ -17,6 +18,7 @@
 import com.example.snaplearn.model.FlashCard;
 import com.example.snaplearn.model.Set;
 import com.example.snaplearn.viewmodel.CardAdapter;
+import com.example.snaplearn.viewmodel.ItemTouchHelperListener;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
@@ -32,7 +34,7 @@
 import java.util.List;
 import java.util.Map;
 
-public class UpdateCard extends AppCompatActivity {
+public class UpdateCard extends AppCompatActivity implements ItemTouchHelperListener {
 
     private ActivityUpdateCardBinding binding;
     private String uid;
@@ -162,4 +164,8 @@
 
     }
 
+    @Override
+    public void onSwiped(RecyclerView.ViewHolder viewHolder) {
+
+    }
 }
\ No newline at end of file
